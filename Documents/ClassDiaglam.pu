@startuml MedalPusher

namespace Case{
    class PusherMover
}

namespace Item{
    interface IReadOnlyFieldItem
    interface IFieldItem
    class FieldItem
    interface IFieldItemEvent
    class FieldItemEvent
    IReadOnlyFieldItem <|-- IFieldItem
    IFieldItem <|.. FieldItem
    IFieldItemEvent <|.. FieldItemEvent
    FieldItem *- IFieldItemEvent

    interface IReadOnlyMedal
    interface IMedal
    class Medal
    IReadOnlyMedal <|-- IMedal
    IMedal <|.. Medal

    interface IFieldObject
    IFieldObject <|-- IMedal
    IFieldObject <|-- IFieldItem
    
    namespace Checker{
        interface IObservableItemChecker<TItem>{
            +IObservable<TItem>
        }

        interface IObservableMedalChecker{
            +IObservable<IMedal>
        }
        class MedalChecker
        IObservableItemChecker <|-- IObservableMedalChecker
        IObservableMedalChecker <|.. MedalChecker

        interface IObservableFieldItemChecker{
            +IObservable<IFieldItem>
        }
        class FieldItemChecker
        IObservableItemChecker <|-- IObservableFieldItemChecker
        IObservableFieldItemChecker <|.. FieldItemChecker
    }
    
    namespace Payout{
        interface IObservableMedalPayouter{
            +IObservable<Unit> InputedMedalCount
        }
        interface IMedalPayoutOperator{
            +void Payout(int);
        }
        class MedalPayouter
        MedalPayouter .|> IMedalPayoutOperator
        IObservableMedalPayouter <|.. MedalPayouter

        interface IFieldItemPayoutOperator{
            +void Payout(IFieldItem)
        }
        class FieldItemPayouter
        IFieldItemPayoutOperator <|.. FieldItemPayouter

        class PayoutMedalView<<View>>
        PayoutMedalView --> IObservableMedalPayouter : 払い出しメダル数を監視



    }
    
    namespace Inventory{
        interface IObservableMedalInventory{
            +IObservable<int> MedalInventoryCount
        }
        class MedalInventory{
            -ReactiveProperty<int> m_medalCount
        }
        IObservableMedalInventory <|.. MedalInventory

        interface IObservableFieldItemInventory{
            +IObservable<IReadOnlyList<IFieldItem>> 
        }
        class FieldItemInventory{
            -ReactiveCollection<IFieldItem> m_items
        }
        IObservableFieldItemInventory <|.. FieldItemInventory

        MedalInventory --(( IObservableMedalChecker
        FieldItemInventory --(( IObservableFieldItemChecker
        Input.IGameCommandProvider <--- MedalInventory : 入力を監視

        class FieldItemApplyer
        Item.Payout.IMedalPayoutOperator <-- FieldItemApplyer : メダル払い出しを要求

        class MedalInventoryView<<View>>
        MedalInventoryView --> IObservableMedalInventory
        class FieldItemInventoryView<<View>>
        FieldItemInventoryView --> IObservableFieldItemInventory

        FieldItemApplyer --> IObservableFieldItemInventory
        MedalInventory --> Item.Payout.IMedalPayoutOperator : メダル払い出しを要求
    }

    ' Item.Inventory.IObservableMedalCounter <- PayoutMedalView : 落下メダル数を監視
    ' Item.Payout.IObservableMedalPayouter <- PayoutMedalView : 投入メダル数を監視
}

namespace Input{
    enum GameCommand
    interface IGameCommandProvider{
        +IObservable<GameCommand> InputedCommand { get; }
    }
    class GameCommandFormatter
    GameCommand <- GameCommandFormatter
    IGameCommandProvider <|.. GameCommandFormatter
    GameCommandFormatter --> IInputProvider
    interface IInputProvider
    class UserInputProvider
    class AutoInputProvider
    class Input<<static>>
    IInputProvider <|.. UserInputProvider
    IInputProvider <|.. AutoInputProvider
    UserInputProvider --> Input
}

namespace Slot{
    class StockManager
    IObservableStockCount <|.. StockManager
    IObservableMedalChecker ))-- StockManager
    class Slot
    enum SlotStatus{
        Idol
        Rolling
    }
    IObservableStockCount <-- Slot : ストック数を監視

    ' ISlot <|.. Slot
    SlotStatus <- Slot

    interface IObservableStockCount{
        +ObservableStockCount { get; }
    }

    class StockView<<View>>
    IObservableStockCount <- StockView : ストックを監視

}

namespace PayoutPinball{
    interface IPinballPocket
    class PinballPocket
    IPinballPocket <|.. PinballPocket

    interface IPinballEvent
    class PinballEvent
    IPinballEvent <|.. PinballEvent

    PinballPocket *- IPinballEvent
    PinballPocket --(( IObservableMedalChecker
}


@enduml